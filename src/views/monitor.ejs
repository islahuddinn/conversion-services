<!DOCTYPE html>
<html>
  <head>
    <title>Task Monitoring Panel</title>
    <link rel="stylesheet" href="/styles.css" />

    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 20px;
        background-color: #f8f9fa;
        color: #333;
      }
      .container {
        margin: 20 auto;
      }
      pre {
        font-size: x-small;
      }

      .task-section {
        margin-bottom: 20px;
      }
      .fail {
        color: red;
      }
      .complete {
        color: green;
      }
      .task-section h2 {
        color: #007bff;
      }
      table {
        width: 100%;
        border-collapse: collapse;
      }
      th,
      td {
        padding: 8px 12px;
        border: 1px solid #ddd;
        text-align: left;
      }
      th {
        background-color: #f1f1f1;
      }
      body {
        font-family: "Arial", sans-serif;
        background-color: #e9ecef;
        margin: 0;
        padding: 20px;
        color: #343a40;
      }

      button:hover {
        filter: brightness(1.1);
      }

      button:active {
        transform: scale(0.98);
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1
        style="
          text-align: center;
          font-family: 'Arial', sans-serif;
          color: #343a40;
        "
      >
        Propagator Task Monitoring Panel
      </h1>

      <div
        style="
          max-width: 600px;
          margin: 20px auto;
          padding: 20px;
          background-color: #f8f9fa;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
          border-radius: 8px;
        "
      >
        <!-- Concurrency Control Section -->
        <div
          style="
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
          "
        >
          <button
            id="increaseConcurrency"
            style="
              padding: 10px 20px;
              background-color: #28a745;
              color: white;
              border: none;
              border-radius: 4px;
              cursor: pointer;
              font-size: 16px;
              transition: background-color 0.3s ease;
            "
          >
            Increase Concurrency
          </button>
          <button
            id="decreaseConcurrency"
            style="
              padding: 10px 20px;
              background-color: #dc3545;
              color: white;
              border: none;
              border-radius: 4px;
              cursor: pointer;
              font-size: 16px;
              transition: background-color 0.3s ease;
            "
          >
            Decrease Concurrency
          </button>
        </div>

        <!-- Concurrency Limit Display -->
        <div style="text-align: center; font-size: 18px; color: #495057">
          Current Concurrency Limit:
          <span
            id="concurrencyLimit"
            style="font-weight: bold; font-size: 20px; color: #007bff"
          >
            <%= concurrencyLimit %>
          </span>
        </div>
      </div>
      <div class="task-section">
        <h2>Processing Tasks [ <%= processingTasks.length %> tasks ]</h2>
        <table>
          <thead>
            <tr>
              <th>ID</th>
              <th>Media Preview</th>
              <th>Status</th>
              <th>Retry Count</th>
              <th>Updated At</th>
              <th>Created At</th>
              <th>Callback URL</th>
              <th>Post Items</th>
              <th>Remove</th>
              <th>Results</th>
              <th>Error</th>
            </tr>
          </thead>
          <tbody>
            <% processingTasks.forEach(task => { %>
            <tr>
              <td><%= task.id %></td>
              <td>
                <% if (task.PostItems) { %> <%
                task.PostItems.forEach(function(postItem) { %>
                <!-- Use function syntax -->
                <% if (postItem.PostItemType === 1) { %>
                <img
                  src="<%= postItem.ThumNail %>"
                  alt="Thumbnail"
                  style="max-width: 100px; max-height: 100px; object-fit: cover"
                  loading="lazy"
                />
                <% } else if (postItem.PostItemType === 2) { %>
                <video
                  src="<%= postItem.Content %>"
                  controls
                  style="max-width: 100px; max-height: 100px"
                  loading="lazy"
                ></video>
                <% } %> <% }); %> <% } else { %>
                <span>No Media</span>
                <% } %>
              </td>
              <td><%= task.status %></td>
              <td><%= task.retryCount %></td>
              <td><%= new Date(task.updatedAt).toLocaleString() %></td>
              <td><%= new Date(task.createdAt).toLocaleString() %></td>
              <td><%= task.callbackUrl %></td>
              <td><pre><%= JSON.stringify(task.PostItems, null, 2) %></pre></td>
              <td><pre><%= JSON.stringify(task.results, null, 2) %></pre></td>
              <td>
                <button
                  class="remove-task-btn"
                  data-id="<%= task.id %>"
                  style="
                    padding: 6px 12px;
                    background-color: #dc3545;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 14px;
                    transition: background-color 0.3s ease;
                  "
                >
                  Remove
                </button>
              </td>
              <td><%= task.error || "None" %></td>
            </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <!-- Failed Tasks -->
      <div class="task-section">
        <h2 class="fail">Failed Tasks [ <%= failedTasks.length %> tasks ]</h2>
        <table>
          <thead>
            <tr>
              <th>ID</th>
              <th>Media Preview</th>
              <th>Status</th>
              <th>Retry Count</th>
              <th>Updated At</th>
              <th>Created At</th>
              <th>Callback URL</th>
              <th>Post Items</th>
              <th>Results</th>
              <th>Remove</th>
              <th>Error</th>
              <th>CallBack Error</th>
            </tr>
          </thead>
          <tbody>
            <% failedTasks.forEach(task => { %>
            <tr>
              <td><%= task.id %></td>
              <td>
                <% if (task.PostItems) { %> <%
                task.PostItems.forEach(function(postItem) { %>
                <!-- Use function syntax -->
                <% if (postItem.PostItemType === 1) { %>
                <img
                  src="<%= postItem.ThumNail %>"
                  alt="Thumbnail"
                  style="max-width: 100px; max-height: 100px; object-fit: cover"
                  loading="lazy"
                />
                <% } else if (postItem.PostItemType === 2) { %>
                <video
                  src="<%= postItem.Content %>"
                  controls
                  style="max-width: 100px; max-height: 100px"
                  loading="lazy"
                ></video>
                <% } %> <% }); %> <% } else { %>
                <span>No Media</span>
                <% } %>
              </td>
              <td><%= task.status %></td>
              <td><%= task.retryCount %></td>
              <td><%= new Date(task.updatedAt).toLocaleString() %></td>
              <td><%= new Date(task.createdAt).toLocaleString() %></td>
              <td><%= task.callbackUrl %></td>
              <td><pre><%= JSON.stringify(task.PostItems, null, 2) %></pre></td>
              <td><pre><%= JSON.stringify(task.results, null, 2) %></pre></td>
              <td>
                <button
                  class="remove-task-btn"
                  data-id="<%= task.id %>"
                  style="
                    padding: 6px 12px;
                    background-color: #dc3545;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 14px;
                    transition: background-color 0.3s ease;
                  "
                >
                  Remove
                </button>
              </td>
              <td><%= task.error %></td>
              <td><%= task.callBackError %></td>
            </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <!-- Completed Tasks -->
      <div class="task-section">
        <h2 class="complete">
          Completed Tasks [ <%= completedTasks.length %> tasks ]
        </h2>
        <table>
          <thead>
            <tr>
              <th>ID</th>
              <th>Media Preview</th>
              <th>Status</th>
              <th>Retry Count</th>
              <th>Callback Delivery Try Count</th>
              <th>Updated At</th>
              <th>Created At</th>
              <th>Callback URL</th>
              <th>Post Items</th>
              <th>Results</th>
              <th>Remove</th>
              <th>Error</th>
              <th>CallBack Error</th>
            </tr>
          </thead>
          <tbody>
            <% completedTasks.forEach(task => { %>
            <tr>
              <td><%= task.id %></td>
              <td>
                <% if (task.PostItems) { %> <%
                task.PostItems.forEach(function(postItem) { %>
                <!-- Use function syntax -->
                <% if (postItem.PostItemType === 1) { %>
                <img
                  src="<%= postItem.ThumNail %>"
                  alt="Thumbnail"
                  style="max-width: 100px; max-height: 100px; object-fit: cover"
                  loading="lazy"
                />
                <% } else if (postItem.PostItemType === 2) { %>
                <video
                  src="<%= postItem.Content %>"
                  controls
                  style="max-width: 100px; max-height: 100px"
                  loading="lazy"
                ></video>
                <% } %> <% }); %> <% } else { %>
                <span>No Media</span>
                <% } %>
              </td>
              <td><%= task.status %></td>
              <td><%= task.retryCount %></td>
              <td><%= task.callbackDeliveryTryCount %></td>
              <td><%= new Date(task.updatedAt).toLocaleString() %></td>
              <td><%= new Date(task.createdAt).toLocaleString() %></td>
              <td><%= task.callbackUrl %></td>
              <td><pre><%= JSON.stringify(task.PostItems, null, 2) %></pre></td>
              <td><pre><%= JSON.stringify(task.results, null, 2) %></pre></td>
              <td>
                <button
                  class="remove-task-btn"
                  data-id="<%= task.id %>"
                  style="
                    padding: 6px 12px;
                    background-color: #dc3545;
                    color: white;
                    border: none;
                    border-radius: 4px;
                    cursor: pointer;
                    font-size: 14px;
                    transition: background-color 0.3s ease;
                  "
                >
                  Remove
                </button>
              </td>
              <td><%= task.error || "None" %></td>
              <td><%= task.callBackError %></td>
            </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <!-- Pending Tasks -->
      <div class="task-section">
        <h2>Pending Tasks [ <%= pendingTasks.length %> tasks ]</h2>
        <table>
          <thead>
            <tr>
              <th>ID</th>
              <th>Media Preview</th>
              <th>Status</th>
              <th>Retry Count</th>
              <th>Updated At</th>
              <th>Created At</th>
              <th>Callback URL</th>
              <th>Post Items</th>
              <th>Results</th>
              <th>Error</th>
            </tr>
          </thead>
          <tbody>
            <% pendingTasks.forEach(task => { %>
            <tr>
              <td><%= task.id %></td>
              <td>
                <% if (task.PostItems) { %> <%
                task.PostItems.forEach(function(postItem) { %>
                <!-- Use function syntax -->
                <% if (postItem.PostItemType === 1) { %>
                <img
                  src="<%= postItem.ThumNail %>"
                  alt="Thumbnail"
                  style="max-width: 100px; max-height: 100px; object-fit: cover"
                  loading="lazy"
                />
                <% } else if (postItem.PostItemType === 2) { %>
                <video
                  src="<%= postItem.Content %>"
                  controls
                  style="max-width: 100px; max-height: 100px"
                  loading="lazy"
                ></video>
                <% } %> <% }); %> <% } else { %>
                <span>No Media</span>
                <% } %>
              </td>
              <td><%= task.status %></td>
              <td><%= task.retryCount %></td>
              <td><%= new Date(task.updatedAt).toLocaleString() %></td>
              <td><%= new Date(task.createdAt).toLocaleString() %></td>
              <td><%= task.callbackUrl %></td>
              <td><pre><%= JSON.stringify(task.PostItems, null, 2) %></pre></td>
              <td><pre><%= JSON.stringify(task.results, null, 2) %></pre></td>
              <td><%= task.error || "None" %></td>
            </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
  </body>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const removeButtons = document.querySelectorAll(".remove-task-btn");

      removeButtons.forEach((button) => {
        button.addEventListener("click", (event) => {
          const taskId = event.target.dataset.id;

          if (confirm(`Are you sure you want to remove task ID ${taskId}?`)) {
            fetch(`/remove-task/${taskId}`, {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json",
              },
            })
              .then((response) => {
                if (response.ok) {
                  alert(`Task ID ${taskId} removed successfully!`);
                  window.location.reload();
                } else {
                  alert(`Failed to remove task ID ${taskId}.`);
                }
              })
              .catch((error) => alert(`Error: ${error.message}`));
          }
        });
      });
    });
    document.addEventListener("DOMContentLoaded", () => {
      const increaseConcurrencyBtn = document.getElementById(
        "increaseConcurrency"
      );
      const decreaseConcurrencyBtn = document.getElementById(
        "decreaseConcurrency"
      );
      const concurrencyLimitSpan = document.getElementById("concurrencyLimit");

      decreaseConcurrencyBtn.addEventListener("click", () => {
        fetch("/decrease-concurrency", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.status === 400) {
              alert(data.message);
              return;
            }
            concurrencyLimitSpan.textContent = data.newLimit;
            console.log("Concurrency limit increased to", data.newLimit);
          });
      });

      increaseConcurrencyBtn.addEventListener("click", () => {
        fetch("/increase-concurrency", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.status === 400) {
              alert(data.message);
              return;
            }
            concurrencyLimitSpan.textContent = data.newLimit;

            console.log("Concurrency limit increased to", data.newLimit);
          })
          .catch((error) => alert(error.message));
      });
    });
  </script>
</html>
